# -*- mode:org -*-
#+TITLE: Theory CFGCI
#+AUTHOR: Vijay Gopal Chilkuri
#+EMAIL: vijay.gopal.c@gmail.com
#+OPTIONS: toc:t
#+LATEX_CLASS: article
#+LATEX_HEADER: \usepackage{tabularx}
#+LATEX_HEADER: \usepackage{braket}
#+LATEX_HEADER: \usepackage{minted}

* Main Fortran code

** Loop over configurations

#+name: mainf90
#+begin_src f90 :main no :tangle cfgCI.irp.f
      subroutine printMatrix(mat, rows, cols)
      implicit none
      BEGIN_DOC
      ! Print a 2D matrix
      END_DOC
      integer i,j
      integer,intent(in) :: rows
      integer,intent(in) :: cols
      real*8,dimension(:,:),intent(in) :: mat(rows,cols)
      print *,""
      do i=1,rows
         do j=1,cols
            write(*,'(F6.4,2X)',advance="no") mat(i,j)
         end do
         print *,""
      end do
      end subroutine

      program cfgCI
      use cfunctions
      implicit none
      BEGIN_DOC
!     TODO : Put the documentation of the program here
      END_DOC
      character*32 cc
      integer i, j
      integer orbp, orbq
      integer rows
      integer cols
      integer*8 MS
      print *, N_int
      call debug_det(psi_det(1,1,1),N_int)
      call debug_det(psi_det(1,1,2),N_int)
      call debug_spindet(psi_det(1,1,1),N_int)
      call debug_spindet(psi_det(1,1,2),N_int)
      print *,N_int
      cc = "Hello"
      print *,psi_det_size
      do i = 1, 4
         print *, psi_configuration(1,1,i), psi_configuration(1,2,i)
      end do

#+end_src


** Apply single excitations on a configuration

#+begin_src f90 :main no :tangle cfgCI.irp.f
      integer Nint
      integer(bit_kind), dimension(1,2,100) :: singles
      integer n_singles
      Nint=1
      do i = 1, 1
         call generate_all_singles_cfg(psi_configuration(:,:,i), singles,&
         n_singles, Nint)
         print *,"Number of singles=",n_singles
         do j = 1, 2
            print *, psi_configuration(1,1,i), singles(1,1,j)
            MS = 0
            rows=-1
            cols=-1
            if(psi_configuration(1,1,i) .EQ. 0 .OR. singles(1,1,j) .EQ.0) cycle
            call getApqIJMatrixDims(psi_configuration(1,1,i),           &
                                    singles(1,1,j), &
                                    MS,                       &
                                    rows,                     &
                                    cols)
                                    print *, i,">",rows, cols

         end do
!        call printCFGlist(Nint, n_singles, singles)
      end do

      integer startDet, endDet
      do i = 1, 4
         startDet = psi_configuration_to_psi_det(1,i)
         endDet = psi_configuration_to_psi_det(2,i)
         do j = startDet, endDet
            print *, "\t",i, j, psi_configuration_to_psi_det_data(j)
         end do
      end do
      print *, 'Now starting to read my provider for dims'
      do i = 4,6,2
         do j = i-2,i+2,2
            print *,i,j,AIJpqMatrixDimsList(i,j,1,i,j,1), AIJpqMatrixDimsList(i,j,1,i,j,2)
         end do
      end do
      print *, 'Now starting to read my provider for matrix'
      do i = 4,6,2
         do j = i,i+2,2
            rows = AIJpqMatrixDimsList(i,j,1,i+1,1,1)
            cols = AIJpqMatrixDimsList(i,j,1,i+1,1,2)
            print *,i,j,rows,cols
            !print *,AIJpqContainer(i,j,1,i+1,1,:rows,:cols)
            call printMatrix(AIJpqContainer(i,j,1,i+1,1,:,:),14,14)
         end do
      end do
      print *, 'Hello world Tangled with two blocks'
      end
#+end_src

* Running QP

#+name: runqp
#+begin_src bash :results output
cd ~/Documents/codes/qp2
source quantum_package.rc
cd src/cfgCI
qp set_file n2.ezfio
ninja 2>&1 > /dev/null
qp run cfgCI
#+end_src

#+RESULTS: runqp
#+begin_example
Date: 28/01/2021 01:28:26
===============
Quantum Package
===============

Git Commit: Fixed doc
Git Date  : Mon Jan 25 22:54:59 2021 +0100
Git SHA1  : 46ce8a3
EZFIO Dir : n2.ezfio


Task server running : tcp://127.0.1.1:41279
.. >>>>> [ IO READ: read_wf ] <<<<< ..

.. >>>>> [ RES  MEM :       0.004993 GB ] [ VIRT MEM :       0.042542 GB ] <<<<< ..
.. >>>>> [ WALL TIME:       0.000144  s ] [ CPU  TIME:       0.001504  s ] <<<<< ..

 ,* mo_label          Canonical
,* Number of determinants                                       194
,* mo_num                                                        18
,* N_int                                                          1
.. >>>>> [ IO READ: elec_beta_num ] <<<<< ..

.. >>>>> [ RES  MEM :       0.004993 GB ] [ VIRT MEM :       0.107937 GB ] <<<<< ..
.. >>>>> [ WALL TIME:       0.001827  s ] [ CPU  TIME:       0.007938  s ] <<<<< ..

.. >>>>> [ IO READ: elec_alpha_num ] <<<<< ..

.. >>>>> [ RES  MEM :       0.004993 GB ] [ VIRT MEM :       0.107937 GB ] <<<<< ..
.. >>>>> [ WALL TIME:       0.001969  s ] [ CPU  TIME:       0.008272  s ] <<<<< ..

.. >>>>> [ IO READ: ao_num ] <<<<< ..

.. >>>>> [ RES  MEM :       0.004993 GB ] [ VIRT MEM :       0.107937 GB ] <<<<< ..
.. >>>>> [ WALL TIME:       0.002125  s ] [ CPU  TIME:       0.008358  s ] <<<<< ..

 Read  mo_coef
,* Dimension of the psi arrays                               100000
 Read psi_det
           1
 000000000000007F|000000000000007F
 |+++++++---------------------------------------------------------|
 |+++++++---------------------------------------------------------|
 000000000000013F|000000000000013F
 |++++++--+-------------------------------------------------------|
 |++++++--+-------------------------------------------------------|
 000000000000007F
 |+++++++---------------------------------------------------------|
 000000000000013F
 |++++++--+-------------------------------------------------------|
           1
      100000
                    0                  127
                    0                  191
                    0                  223
                    0                  239
 Number of singles=          84
                    0                    0
Isomo=0 Jsomo=0
NsomoI=0 NsomoJ=0
	 >> 1 1
           1 >                    1                    1
                    0                  129
Isomo=0 Jsomo=129
NsomoI=0 NsomoJ=2
	 >> 1 1
           1 >                    1                    1
 \t           1           1           1
 \t           2           2          22
 \t           3           3           3
 \t           4           4          21
 Hello world Tangled with two blocks
Wall time: 0:00:01

#+end_example
